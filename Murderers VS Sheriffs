local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Snowt-Team/ORION-GUI/main/ORION%20MOBILE.txt')))()

local Window = OrionLib:MakeWindow({Name = "[SN] Murderer vs Sheriff | By SnowT", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest"})

OrionLib:MakeNotification({
	Name = "Execute notification",
	Content = "Script injected!",
	Image = "rbxassetid://4483345998",
	Time = 5
})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://7733960981",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Reset",
	Callback = function()
		game.Players.LocalPlayer.Character.Humanoid.Health = 0
  	end    
})

Tab:AddButton({
	Name = "Destory UI",
	Callback = function()
		OrionLib:Destroy()
  	end    
})  

local Tab = Window:MakeTab({
    Name = "Combat",
    Icon = "rbxassetid://7733674079",
    PremiumOnly = false
})

local function EnableKillAll()
    getgenv().kill = true; -- set "true" to "false" to stop the script

while getgenv().kill == true and task.wait(.1) do
    for i,v in pairs(game.Players:GetChildren()) do
        if v ~= game.Players.LocalPlayer and v.Character ~= nil and not v.Character:FindFirstChild("ForceField") then
        pcall(function()
game:GetService("ReplicatedStorage").Remotes.Stab:FireServer(v.Character.HumanoidRootPart)
game:GetService("ReplicatedStorage").Remotes.Shoot:FireServer(Vector3.new(0, 0, 0),Vector3.new(0, 0, 0),v.Character.HumanoidRootPart.Part,Vector3.new(0, 0, 0))
        end)
        end
    end
end
end

local function DisableKillAll()
    getgenv().kill = false; -- set "true" to "false" to stop the script

while getgenv().kill == true and task.wait(.1) do
    for i,v in pairs(game.Players:GetChildren()) do
        if v ~= game.Players.LocalPlayer and v.Character ~= nil and not v.Character:FindFirstChild("ForceField") then
        pcall(function()
game:GetService("ReplicatedStorage").Remotes.Stab:FireServer(v.Character.HumanoidRootPart)
game:GetService("ReplicatedStorage").Remotes.Shoot:FireServer(Vector3.new(0, 0, 0),Vector3.new(0, 0, 0),v.Character.HumanoidRootPart.Part,Vector3.new(0, 0, 0))
        end)
        end
    end
end
end

Tab:AddToggle({
    Name = "Kill All",
    Default = false,
    Callback = function()
        KillAll = not KillAll
        if not KillAll then
            EnableKillAll()
            else
                DisableKillAll()
        end
end
})
local Section = Tab:AddSection ({
    Name = "Tp to players:"
})
Tab:AddParagraph("Важно!", "Данная функция позволяет вам телепортироваться к любому игроку, чтобы обновить список игроков, вам нужно переинжектить скрипт.")

local plrs = game.Players

local playerNames = {}
local players = plrs:GetPlayers()

for _, player in ipairs(players) do
table.insert(playerNames, player.Name)
end

Tab:AddDropdown({
    Name = "Tp to players",
    Default = playerNames[1] or "No players",
    Options = playerNames,
    Callback = function(selectedplrName)
    local targetPlayer = plrs:FindFirstChild(selectedplrName)

    if targetPlayer and targetPlayer.Character and targetPlayer.Character: FindFirstChild("HumanoidRootPart") then
    local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
    local localPlayerRoot = plrs.LocalPlayer.Character: FindFirstChild("HumanoidRootPart")

    if localPlayerRoot then
    localPlayerRoot.CFrame = CFrame.new(targetPosition)
    end
    end
    print(selectedplrName)
    end
})

local Tab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://7743875962",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "WalkSpeed:"
})

Tab:AddSlider({
	Name = "Walkspeed",
	Min = 16,
	Max = 500,
	Default = 16,
	Color = Color3.fromRGB(1, 217, 255),
	Increment = 1,
	ValueName = "Walkspeed",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end    
})

Tab:AddToggle({
    Name = "Keep Walkspeed",
	Default = false,
	Callback = function(Value)
KeepWalkspeed = Value
            while KeepWalkspeed do
                if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Players.LocalPlayer.Character.Humanoid.WalkSpeed ~= Walkspeed then
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
                end
task.wait()
            end
	end    
})


Tab:AddLabel("Эта функция делает скорость базовой для всех режимов.")

Tab:AddButton({
    Name = "Default WalkSpeed",
    Callback = function(defs)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    end
})

local Section = Tab:AddSection({
    Name = "JumpPower:"
})

Tab:AddSlider({
	Name = "Jumppower",
	Min = 50,
	Max = 500,
	Default = 50,
	Color = Color3.fromRGB(1, 217, 255),
	Increment = 1,
	ValueName = "Jumppower",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
	end    
})

Tab:AddToggle({
    Name = "Keep JumpPower",
	Default = false,
	Callback = function(Value)
KeepJumppower = Value
            while KeepJumppower do
                if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Players.LocalPlayer.Character.Humanoid.WalkSpeed ~= Jumppower then
                    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Jumppower
                end
task.wait()
            end
	end    
})

Tab:AddLabel("Меняет силу прыжка до базового значения.")


Tab:AddButton({
    Name = "Default JumpPower",
    Callback = function(defj)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
    end
})

Tab:AddLabel("Делает ваши прыжки бесконечными")

local function EnableInfJ()
local infjmp = true
game:GetService("UserInputService").jumpRequest:Connect(function()
    if infjmp then
        game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass"Humanoid":ChangeState("Jumping")
    end
end)
end


local function DisableIInfJ()
local infjmp = false
end

Tab:AddToggle({
    Name = "Infinity Jumps",
    Default = false,
    Callback = function(infj)
        InfinJ = not InfinJ
        if not InfinJ then
            EnableInfJ()
            else
                DisableIInfJ()
        end
    end
})

Tab:AddSlider({
    Name = "Camera Zoom Distance",
        Min = 0,
        Max = 20000,
        Default = 0,
        Color = Color3.fromRGB(1, 217, 255),
        Increment = 0.1,
        ValueName = "CamZoomDis",
        Callback = function(Value)
            game.Players.LocalPlayer.CameraMaxZoomDistance = Value
            end
})

Tab:AddSlider({
    Name = "Gravity",
    Min = 0,
    Max = 250,
    Default = 0,
    Color = Color3.fromRGB(1, 217, 255),
	Increment = 1,
	ValueName = "gravity",
	Callback = function(Value)
	    game.Players.LocalPlayer.Chatacter.Humanoid.Gravity = Value
	    end
})

local Tab = Window:MakeTab({
    Name = "Settings",
    Icon = "rbxassetid://7733674820",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Fly:"
})

Tab:AddLabel("Загружает GUI с полетом.")

Tab:AddButton({
    Name = "Activate Fly",
    Callback = function(fly)loadstring(game:HttpGet(("https://pastebin.com/raw/SLTqw4r4"), true))()
    end
})

local Section = Tab:AddSection({
    Name = "God Mode:"
})

Tab:AddParagraph("Важно!", "При нажатии на кнопку, вы станете бессмертым, но не сможете прыгать. Чтобы отключить функцию, просто ресетнитесь.")

Tab:AddButton({
    Name = "God Mode",
    Callback = function(gdm)loadstring(game:HttpGet(("https://pastebin.com/raw/yraTMGwu"), true))()
end
})

local Section = Tab:AddSection({
    Name = "NoClip:"
})

Tab:AddParagraph("Важно!", "NoClip перестает работать, если вы прыгните или упадете, поэтому не стоит говорить, что NoClip сломанный. К сожалению на этот момент пока что будет все так.")

local Noclip = nil
local Clip = nil

local function NoClipEnabled()
function noclip()
	Clip = false
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21)
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() 
end

local function NoClipDisabled()
    function noclip()
	Clip = true
		if Clip == true and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = true
				end
			end
		end
		wait(0.21)
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
	
	function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() 
end

Tab:AddToggle({
    Name = "NoClip",
    Default = false,
    Callback = function(nclpnf)
            NoclipOn = not NoclipOn
        if not NoclipOn then
            NoClipEnabled()
        else
            NoClipDisabled()
        end
end
})

local Section = Tab:AddSection({
    Name = "Invisibility:"
})

Tab:AddLabel("Делает вас невидимым!")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function PTransparencyOn(transparency)
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.Transparency = transparency
        end
    end
end


PTransparencyOn(1)

local function PTransparencyOff(transparency)
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.Transparency = transparency
        end
    end
end


PTransparencyOff(0)

Tab:AddToggle({
    Name = "Invisible",
    Default = false,
    Callback = function(invis)
            InvisOn = not InvisOn
        if not InvisOn then
            PTransparencyOn(1)
        else
            PTransparencyOff(0)
        end
end
})

local Tab = Window:MakeTab({
    Name = "Visual",
    Icon = "rbxassetid://7733774602",
	PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Esp:"
})

local espLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/wEquals/Solaris-Hub/main/testing.lua'),true))()
espLib:Load()

Tab:AddToggle({
    Name = "Name Esp",
    Default = false,
    Callback = function(Value)
        if Value then
			espLib.options.names = true
		else
			espLib.options.names = false
		end
	end    
})

Tab:AddToggle({
    Name = "Team Esp",
    Default = false,
    Callback = function (value)
      if value then
			espLib.options.chams = true
		else
			espLib.options.chams = false
		end
	end    
})

Tab:AddToggle({
	Name = "Tracers Esp",
	Default = false,
	Callback = function(Value)
		if Value then
			espLib.options.tracers = true
		else
			espLib.options.tracers = false
		end
	end    
})

local Section = Tab:AddSection({
    Name = "Hitbox:"
})

local CoreGui = game:GetService("StarterGui")
local Players = game:GetService("Players")

local function isNumber(str)
  if tonumber(str) ~= nil or str == 'inf' then
    return true
  end
end

getgenv().HitboxSize = 15
getgenv().HitboxTransparency = 0.9

getgenv().HitboxStatus = false
getgenv().TeamCheck = false

Tab:AddToggle({
    Name = "Create HitBox",
    Default = false,
    Callback = function(state)
        getgenv().HitboxStatus = state
    game:GetService('RunService').RenderStepped:connect(function()
		if HitboxStatus == true and TeamCheck == false then
			for i,v in next, game:GetService('Players'):GetPlayers() do
				if v.Name ~= game:GetService('Players').LocalPlayer.Name then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						v.Character.HumanoidRootPart.Transparency = HitboxTransparency
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
						v.Character.HumanoidRootPart.Material = "Neon"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
			else
		    for i,v in next, game:GetService('Players'):GetPlayers() do
				if v.Name ~= game:GetService('Players').LocalPlayer.Name then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(2,2,1)
						v.Character.HumanoidRootPart.Transparency = 1
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
						v.Character.HumanoidRootPart.Material = "Plastic"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
		end
    end)
end
})

Tab:AddSlider({
    Name = "HitBox Range",
    Min = 20,
    Max = 100,
    Default = 20,
    Color = Color3.fromRGB(1, 217, 255),
	Increment = 1,
	ValueName = "HitBoxR",
	Callback = function(value)
	    getgenv().HitboxSize = value
	end
})

OrionLib:Init()
